services:
  postgres:
    container_name: postgres
    restart: unless-stopped
    image: postgres:10
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=tal2k
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "tal2k", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s

  pgadmin:
    container_name: pgadmin
    restart: always
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network

  mongo:
    container_name: mongo
    restart: always
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=tal2k
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

  mongo-express:
    container_name: mongo-express
    restart: always
    image: mongo-express
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    networks:
      - app-network

  worker:
    container_name: worker
    build:
      context: ./celery-queue
      dockerfile: Dockerfile
    command: celery -A tasks worker -l info -E
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
    depends_on:
      - redis
    volumes: ['./celery-queue:/queue']
    networks:
      - app-network

  monitor:
    container_name: monitor
    build:
      context: ./celery-queue
      dockerfile: Dockerfile
    ports:
     - "5555:5555"
    command:  ['celery', 'flower', '-A', 'tasks']
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - redis
      - worker
    volumes: ['./celery-queue:/queue']
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  app:
    container_name: app
    restart: always
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SECRET_KEY=thisisunsafe
      - MONGO_USERNAME=admin
      - MONGO_PASSWORD=admin
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DBNAME_ALIAS=tal2k
      - POSTGRES_USERNAME=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DBNAME_ALIAS=tal2k
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
    ports:
      - "5000:5000"
    entrypoint: ["/docker_script.sh"]
    networks:
      - app-network

volumes:
  postgres-data:
    name: postgres-data
  mongo-data:
    name: mongo-data
  redis_data:
    name: redis_data

networks:
  app-network:
    driver: bridge